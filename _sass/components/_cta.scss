.cta {
  display: grid;
  grid-template-columns: 1fr;
  gap: 0.6rem;
  width: min(720px, 100%);
  margin: 3rem auto 3rem;
  background: rgba(255, 255, 255, 0.07);
  padding: 0.5rem;
  border-radius: 10px;
}

.cta input,
.cta textarea {
  border: none;
  background: white;
  border-radius: 6px;
  padding: 0.9rem 1.1rem;
  min-width: 0;
  color: #111;
}

.cta button {
  padding: 0.9rem 1.1rem;
}

.cta :where(input, textarea):focus {
  outline: none;
  box-shadow: 0 0 0 3px var(--ring);
}

/* Buttons in CTA use global styles from _style.scss */

@media (min-width: 600px) {
  .cta {
    grid-template-columns: 1fr auto;
    align-items: center;
  }
}

/* Pull CTA closer to hero content on narrow screens */
@media (max-width: 700px) {
  .cta {
    margin: 0.8rem auto 1.8rem;
    /* tighter top/bottom spacing on mobile */
  }
}

/* Progressive reveal area (hidden when not focused) */
.cta-extra {
  grid-column: 1 / -1; /* span full width under the main row */
  display: none; /* keep collapsed layout identical to current */
  gap: 0.6rem;
}

.cta:focus-within .cta-extra { display: grid; }

/* On mobile, place the submit button at the bottom when expanded */
@media (max-width: 599px) {
  .cta { grid-auto-flow: row; }
  .cta:focus-within #project { order: 1; }
  .cta:focus-within .cta-extra { order: 2; }
  .cta:focus-within button { order: 3; }
}

.cta textarea {
  resize: vertical;
  min-height: 120px;
}

/* Honeypot: keep out of layout and accessibility tree */
.hp { position: absolute; left: -10000px; top: auto; width: 1px; height: 1px; overflow: hidden; }
.hp-field { opacity: 0; pointer-events: none; }
